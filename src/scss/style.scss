@use "sass:math";

// Connecting mixins ===========================================================================================================================================================================================================================================================================
@import "base/mixins";

// Connecting fonts ===========================================================================================================================================================================================================================================================================
@import url("https://fonts.googleapis.com/css2?family=Mulish:wght@400;700&display=swap");

// Default font ==============================================================================================================================================================================================================================================================================
$fontFamily: "Mulish";
$fontSize: toRem(16); // where 14(px) is the default font size from the layout

// Primary colors
$mainColor: #000; // default font color
$redColor: #ff0000;
$titleColor: #19202c;
$subTitleColor: #c2c2c2;
$greyColor: #898989;
$backgroundColor: #fff;
$inputBackground: rgba(235, 235, 235, 0.3);
$placeholderColor: rgba(48, 56, 76, 0.4);
$blueColor: #2196f3;

// Adaptive grid settings ===============================================================================================================================================================================================================================================================================================

// Minimum page width
$minWidth: 320;
// Canvas (layout) width
$maxWidth: 1920;
// Width of the bounding container (0 = no bound)
$maxWidthContainer: 1820;
// Total container padding
// (32 = 16+16)
$containerPadding: 32;

// Width of the first breakpoint trigger
$containerWidth: $maxWidthContainer + $containerPadding;

// Breakpoints
$pc: $containerWidth; // PCs, laptops, some tablets in horizontal position
$tablet: 991.98px; // Tablets, some phones in landscape orientation
$mobile: 767.98px; // Phones L
$mobileSmall: 479.98px; //Phones S

// Adaptive type:
// 1 = responsive (container has no breakpoints),
// 2 = breakpoint-based (container changes its width according to breakpoint)
$responsiveType: 1;

// ============================================================================================================================================================================================================================================================================================================================================================================================
// ============================================================================================================================================================================================================================================================================================================================================================================================

// Zeroing ============================================================================================================================================================================================== =============================================================================================== ===============================================================================================
@import "base/null";

// BODY tag styles ============================================================================================================================================================================================================================================================================================================================================================================================
body {
	background-color: $backgroundColor;
}

.wrapper {
	min-height: 100%;
	display: flex;
	flex-direction: column;
	overflow: hidden;
	@supports (overflow: clip) {
		overflow: clip;
	}
	// Press footer
	> main {
		flex: 1 1 auto;
	}
	// Fix for sliders
	> * {
		min-width: 0;
	}
}
// Restrictive container ======================================================================================================================================================================================================================

@if ($responsiveType==1) {
	// Attentive
	[class*="__container"] {
		@if ($maxWidthContainer>0) {
			max-width: toRem($containerWidth);
			margin: 0 auto;
		}
		@if ($containerPadding>0) {
			@if ($maxWidthContainer>0) {
				padding: 0 toRem(math.div($containerPadding, 2));
			} @else {
				@include adaptiveValue("padding-left", math.div($containerPadding, 2), 15);
				@include adaptiveValue("padding-right", math.div($containerPadding, 2), 15);
			}
		}
	}
	[class*="__container--narrow"] {
		max-width: toRem(1775);
		// padding: 0;
	}
} @else {
	// Breakpoints
	[class*="__container"] {
		margin: 0 auto;
		@if ($maxWidthContainer>0) {
			max-width: toRem($containerWidth);
		} @else {
			@if ($containerPadding>0) {
				padding: 0 toRem(math.div($containerPadding, 2));
			}
		}
		@media (max-width: $pc) {
			max-width: toRem(970);
		}
		@media (max-width: $tablet) {
			max-width: toRem(750);
		}
		@media (max-width: $mobile) {
			max-width: none;
			@if ($containerPadding>0 and $maxWidthContainer>0) {
				padding: 0 toRem(math.div($containerPadding, 2));
			}
		}
	}
}

// <INPUTS>
@import "base/forms/input";

// Connecting styles of common project elements
@import "common";

// Connecting styles of individual blocks
@import "header";
@import "footer";

// Connecting styles to individual pages
@import "home";
